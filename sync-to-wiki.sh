#!/bin/bash

# 🔄 自动同步 docs/ 到 GitHub Wiki
# 需要先在 Web 界面创建 Wiki 首页来初始化仓库

echo "🔄 开始同步 docs/ 到 GitHub Wiki..."

# 配置
WIKI_REPO="https://github.com/greddy7574/taigaMcpServer.wiki.git"
TEMP_DIR="temp-wiki-sync"

# 清理旧的临时目录
if [ -d "$TEMP_DIR" ]; then
    echo "🧹 清理旧临时目录..."
    rm -rf "$TEMP_DIR"
fi

# 克隆 Wiki 仓库
echo "📥 克隆 Wiki 仓库..."
if git clone "$WIKI_REPO" "$TEMP_DIR"; then
    echo "✅ Wiki 仓库克隆成功"
else
    echo "❌ Wiki 仓库克隆失败 - 请先在 Web 界面创建 Wiki 首页"
    echo "   访问: https://github.com/greddy7574/taigaMcpServer/wiki"
    echo "   点击 'Create the first page' 并保存任意内容"
    exit 1
fi

cd "$TEMP_DIR"

# 备份现有内容
echo "💾 备份现有 Wiki 内容..."
mkdir -p ../wiki-backup
cp -r * ../wiki-backup/ 2>/dev/null || true

# 清理 Wiki 目录（保留 .git）
echo "🧹 清理 Wiki 目录..."
find . -type f -not -path './.git/*' -delete

# 转换 docs/ 内容为 Wiki 格式
echo "🔄 转换文档格式..."

# 复制文档文件
cp ../docs/README.md ./Home.md

# 创建侧边栏
cat > _Sidebar.md << 'EOF'
## 🚀 Taiga MCP Server

### ⚡ 快速开始
* [[Home|首页]]
* [[Installation Guide|安装指南]]
* [[Configuration|配置]]
* [[First Steps|第一步]]

### 📋 API 文档
* [[API Reference|API 参考]]
* [[Authentication|认证]]
* [[Projects|项目]]
* [[Sprints|Sprint]]
* [[Issues|问题]]

### 🛠️ 开发指南
* [[CI CD Guide|CI/CD 指南]]
* [[Development|开发环境]]
* [[Testing|测试]]
* [[Troubleshooting|故障排除]]

### 🏗️ 架构
* [[Architecture Overview|架构概览]]
* [[Design|设计文档]]
* [[Modules|模块设计]]

---
**GitHub**: [源码仓库](https://github.com/greddy7574/taigaMcpServer)
EOF

# 复制和转换各个文档文件
echo "📝 复制文档文件..."

# Getting Started
cp ../docs/getting-started/installation.md "Installation-Guide.md"
cp ../docs/getting-started/configuration.md "Configuration.md" 
cp ../docs/getting-started/first-steps.md "First-Steps.md"

# API docs (如果存在)
if [ -f "../docs/api/README.md" ]; then
    cp ../docs/api/README.md "API-Reference.md"
fi

# Guides (如果存在)
if [ -f "../docs/guides/ci-cd.md" ]; then
    cp ../docs/guides/ci-cd.md "CI-CD-Guide.md"
fi

# Architecture (如果存在)
if [ -f "../docs/architecture/overview.md" ]; then
    cp ../docs/architecture/overview.md "Architecture-Overview.md"
fi
if [ -f "../docs/architecture/design.md" ]; then
    cp ../docs/architecture/design.md "Design.md"
fi

# 修复 Wiki 内部链接
echo "🔗 修复内部链接..."
for file in *.md; do
    if [ -f "$file" ]; then
        # 转换相对链接为 Wiki 链接
        sed -i.bak 's/](getting-started\/installation\.md)/](Installation-Guide)/g' "$file"
        sed -i.bak 's/](getting-started\/configuration\.md)/](Configuration)/g' "$file"
        sed -i.bak 's/](getting-started\/first-steps\.md)/](First-Steps)/g' "$file"
        sed -i.bak 's/](api\/README\.md)/](API-Reference)/g' "$file"
        sed -i.bak 's/](guides\/ci-cd\.md)/](CI-CD-Guide)/g' "$file"
        sed -i.bak 's/](architecture\/overview\.md)/](Architecture-Overview)/g' "$file"
        sed -i.bak 's/](architecture\/design\.md)/](Design)/g' "$file"
        
        # 清理备份文件
        rm -f "$file.bak"
    fi
done

# 提交更改
echo "💾 提交 Wiki 更改..."
git add .
git commit -m "Auto-sync from docs/ directory

📚 Synchronized Documentation:
- Updated from main repository docs/ directory
- Converted relative links to Wiki format
- Created structured navigation sidebar
- Maintained all documentation content

🔄 Sync Date: $(date)
🤖 Auto-generated by sync script"

# 推送到 Wiki
echo "🚀 推送到 GitHub Wiki..."
git push origin master

# 返回主目录并清理
cd ..
rm -rf "$TEMP_DIR"

echo ""
echo "🎉 同步完成！"
echo "📖 访问 Wiki: https://github.com/greddy7574/taigaMcpServer/wiki"
echo "🔄 所有 docs/ 内容已同步到 Wiki"
echo ""
echo "📋 同步的页面："
echo "   • Home (首页)"
echo "   • Installation Guide (安装指南)"  
echo "   • Configuration (配置)"
echo "   • First Steps (第一步)"
echo "   • API Reference (API 参考)"
echo "   • CI/CD Guide (CI/CD 指南)"
echo "   • Architecture Overview (架构概览)"
echo ""
echo "💡 提示: 运行此脚本可以随时同步最新的文档更改到 Wiki！"